name: Deploy to AWS Amplify

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  debug-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Debug Environment
      run: |
        echo "üîç DEBUG: Checking environment..."
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Current directory: $(pwd)"
        echo "Files in root:"
        ls -la
        
    - name: Check Secrets Status
      run: |
        echo "üîê DEBUG: Checking if secrets are available..."
        if [ -z "${{ secrets.DATABASE_URL }}" ]; then
          echo "‚ùå DATABASE_URL secret is missing!"
        else
          echo "‚úÖ DATABASE_URL secret is available"
        fi
        
        if [ -z "${{ secrets.NEXTAUTH_SECRET }}" ]; then
          echo "‚ùå NEXTAUTH_SECRET secret is missing!"
        else
          echo "‚úÖ NEXTAUTH_SECRET secret is available"
        fi
        
        if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
          echo "‚ùå AWS_ACCESS_KEY_ID secret is missing!"
        else
          echo "‚úÖ AWS_ACCESS_KEY_ID secret is available"
        fi
        
        echo ""
        echo "üö® If any secrets are missing, add them at:"
        echo "https://github.com/homekrypto/REH-all-working-with-amazon-database/settings/secrets/actions"
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        echo "üì¶ Installing dependencies..."
        npm ci
        
    - name: Generate Prisma client
      run: |
        echo "üîß Generating Prisma client..."
        npx prisma generate
        
    - name: Build application (with error handling)
      run: |
        echo "üèóÔ∏è Building application..."
        npm run build || {
          echo "‚ùå Build failed! Check the logs above for details."
          exit 1
        }
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_SECURE: ${{ secrets.SMTP_SECURE }}
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASS: ${{ secrets.SMTP_PASS }}
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        
    - name: Deploy via AWS Console Instructions
      run: |
        echo ""
        echo "üéâ BUILD SUCCESSFUL!"
        echo "==================="
        echo ""
        echo "Since Amplify CLI requires additional permissions,"
        echo "please deploy via AWS Console manually:"
        echo ""
        echo "üîó AWS Amplify Console:"
        echo "https://console.aws.amazon.com/amplify/"
        echo ""
        echo "üìã Steps:"
        echo "1. Click 'Create new app' ‚Üí 'Host web app'"
        echo "2. Connect GitHub repository"
        echo "3. Select main branch"
        echo "4. Add environment variables from GitHub secrets"
        echo "5. Deploy!"
        echo ""
        echo "‚úÖ Your build is ready and all code is validated!":
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Generate deployment package
      run: zip -r deploy.zip . -x '*.git*' '*node_modules/.cache*' '*tests*' '*.env*'
    
    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: REH-all-working-with-amazon-database
        environment_name: reh-production
        version_label: ${{ github.sha }}
        region: eu-north-1
        deployment_package: deploy.zip

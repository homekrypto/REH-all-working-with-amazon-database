version: 1
frontend:
  phases:
    preBuild:
      commands:
        - echo "üöÄ OPTIMIZED AMPLIFY BUILD STARTED"
        - echo "Node.js version: $(node --version)"
        - echo "NPM version: $(npm --version)"
        - echo "üîç Critical env vars:"
        - 'test -n "$DATABASE_URL" && echo "‚úÖ DATABASE_URL" || echo "‚ùå DATABASE_URL"'
        - 'test -n "$NEXTAUTH_SECRET" && echo "‚úÖ NEXTAUTH_SECRET" || echo "‚ùå NEXTAUTH_SECRET"'
        - 'test -n "$S3_ACCESS_KEY_ID" && echo "‚úÖ S3_ACCESS_KEY_ID" || echo "‚ùå S3_ACCESS_KEY_ID"'
        # Use npm ci for faster, reliable installs
        - echo "üì¶ Installing dependencies with npm ci..."
        - npm ci --production=false --prefer-offline --no-audit --no-fund
        # Generate Prisma client early
        - echo "üîß Generating Prisma client..."
        - npx prisma generate
        - echo "‚úÖ Dependencies installed"
    build:
      commands:
        - echo "üèóÔ∏è Building Next.js application..."
        # Set Node.js memory limit for large builds
        - export NODE_OPTIONS="--max-old-space-size=4096"
        # Verify critical env vars one more time
        - 'test -n "$DATABASE_URL" || (echo "‚ùå DATABASE_URL missing" && exit 1)'
        - 'test -n "$NEXTAUTH_SECRET" || (echo "‚ùå NEXTAUTH_SECRET missing" && exit 1)'
        # Build with optimizations
        - npm run build
        - echo "‚úÖ Build completed successfully"
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*
      - ~/.npm/**/*
